{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Store } from 'redux'\n\n/** All the method for HTTP request */\ntype IHttpMethods = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE'\n\n/** All the HTTP method props */\ninterface IHttpFuncProps {\n  /** Endpoint of you API */\n  endpoint: string\n  /** Method for your API */\n  method: IHttpMethods\n  /** Body params for API */\n  params: any\n  /** Headers for API */\n  headers: any\n}\n\n/*\n * @param {String} url\n * @param {variable} variables\n * @returns {string} updated url\n * this method take url and replace inner url with giving variable object\n */\nconst generateDynamicEndpoint = (url: string, variables: any) => {\n  Object.keys(variables || {}).map((i) => {\n    url = url.replace(`{${i}}`, variables[i])\n  })\n\n  return url\n}\n\n/**\n * @param {object}\n * @returns function call api and return promise. once this promise fullfil it will return data\n */\nconst defaultHttpFn = ({\n  endpoint,\n  method,\n  params,\n  headers,\n  ...other\n}: IHttpFuncProps) => {\n  const parseMethod: string = (method || 'get').toLowerCase()\n\n  if (parseMethod === 'get' && typeof params === 'object') {\n    const urlParams = new URLSearchParams(params)\n    endpoint += `?${urlParams.toString()}`\n  }\n\n  return window\n    .fetch(endpoint, {\n      method: parseMethod,\n      headers: headers || {},\n      ...(parseMethod !== 'get' && {\n        body: params || {}\n      }),\n      ...(other || {})\n    })\n    .then(async (res) => {\n      const data = await res.json()\n\n      return {\n        status: res.status,\n        data: data\n      }\n    })\n}\n\n/** Check if any httpFn Defined by user then use that other wise use defaultHttpFn */\nconst makeHttpCall = (context: any, params: any) => {\n  if (context.httpFn) {\n    return context.httpFn(params)\n  } else {\n    return defaultHttpFn(params)\n  }\n}\n\n/** Interface used for all the allowed props used to generate base instance */\ninterface ICreateBase {\n  /** Redux store of your project */\n  store: Store\n  /** Base endpoint url of your backend */\n  baseApiUrl: string\n  /** Redux Dispatch */\n  dispatch: Function\n  /** Custom httpFn: Used when you make http request */\n  httpFn: Function\n  /** Middleware functions: executed before/after of every HTTP request. */\n  middleware: any\n  /** Name of your redux where you wanted to save data.\n   * Can be update later for different HTTP Request.\n   */\n  reducer: 'string'\n  /** Default state for your HTTP Request.\n   * Can be update later for different HTTP Request.\n   */\n  defaultState: any\n\n  /** Function used to validate the http response. */\n  validateHttpResponse: Function\n}\n\n/** Interface used for all the allowed props used to generate api instance */\ninterface IApiInstance extends ICreateBase {\n  /** Endpoint of your HTTP Request */\n  endpoint: string\n  /** Redux name where you want to save result of HTTP Request. */\n  reduxKey: string\n  /**\n   * Different version of action generated automatically.\n   */\n  action: string\n  /** Unique key from your record\n   * can be 'id' or 'parent.child.sub-child' or 'parent[0].child.sub-child'\n   */\n  key: string\n  /** HTTP Request Method\n   * GET | Post | PUT | DELETE\n   */\n  method: IHttpMethods\n  /** Callback function executed when HTTP Request Succeed. */\n  onSuccess: Function\n\n  /** Callback function executed when HTTP Request Failed. */\n  onError: Function\n}\n\ninterface IApiListInstance extends IApiInstance {\n  /**\n   * path to your list\n   */\n  listPath: string\n}\n\n/** Interface for middleware function */\ninterface IMiddleware {\n  /** Callback function executed before HTTP Request happens\n   * return result will be passed and saved to redux\n   */\n  beforeStart?: Function\n  /** Callback function executed only success of HTTP Request\n   * return result will be passed and saved to redux\n   */\n  afterSuccess?: Function\n\n  onError?: Function\n\n  afterUpdate?: Function\n\n  afterDelete?: Function\n}\n\n/** CreateBase is used to generate Base Instance */\nclass CreateBase {\n  store: any\n  dispatch: Function\n  baseApiUrl: string\n  httpFn: Function\n  middleware: IMiddleware\n  reducer: string\n  defaultState: any\n  validateHttpResponse: Function\n  other: any\n\n  constructor(data: ICreateBase) {\n    const {\n      store,\n      baseApiUrl,\n      httpFn,\n      middleware,\n      reducer,\n      defaultState,\n      validateHttpResponse,\n      ...other\n    } = data\n    this.store = store\n    this.dispatch = store.dispatch\n    this.baseApiUrl = baseApiUrl || ''\n    this.httpFn = httpFn\n    this.middleware = middleware\n    this.reducer = reducer\n    this.defaultState = defaultState\n    this.validateHttpResponse = validateHttpResponse\n    this.other = other\n  }\n\n  /** Used to create HTTP instance from the Base instance */\n  createInstance(data: IApiInstance) {\n    return new API_INSTANCE({\n      ...this.other,\n      ...data,\n      store: data.store || this.store,\n      dispatch: data.dispatch || this.dispatch,\n      baseApiUrl: data.baseApiUrl || this.baseApiUrl || '',\n      httpFn: data.httpFn || this.httpFn,\n      defaultState: data.defaultState || this.defaultState,\n      validateHttpResponse:\n        data.validateHttpResponse || this.validateHttpResponse\n    })\n  }\n\n  /** Used to create Listing HTTP instance from the Base instance */\n  createListInstance(data: IApiListInstance) {\n    return new LISTING_API_INSTANCE({\n      ...this.other,\n      ...data,\n      store: data.store || this.store,\n      dispatch: data.dispatch || this.dispatch,\n      baseApiUrl: data.baseApiUrl || this.baseApiUrl || '',\n      httpFn: data.httpFn || this.httpFn,\n      defaultState: data.defaultState || this.defaultState,\n      validateHttpResponse:\n        data.validateHttpResponse || this.validateHttpResponse,\n      listPath: data.listPath\n    })\n  }\n}\n\ninterface IReduxActions {\n  /** <reducerName>_DEFAULT_<yourReduxKey> */\n  default: string\n  /** <reducerName>_START_<yourReduxKey> */\n  start: string\n  /** <reducerName>_SUCCESS_<yourReduxKey> */\n  success: string\n  /** <reducerName>_UPDATE_<yourReduxKey> */\n  update: string\n  /** <reducerName>_DELETE_<yourReduxKey> */\n  delete: string\n  /** <reducerName>_ERROR_<yourReduxKey> */\n  error: string\n}\n\ninterface IOtherProps {\n  /** Used to refetch data even changing loading to true. */\n  refetch?: Boolean\n  /** Used to pass Body of HTTP request. */\n  params?: any\n  /** Used to replace dynamic portion of api endpoint\n   * /api/v2/user/:id\n   * in above \":id\" will be replaced with value of id key from the urlParams object.\n   */\n  urlParams?: any\n\n  /**\n   * HTTP Header\n   */\n  headers?: any\n}\n\n/** Class used to create HTTP method */\nclass API_INSTANCE {\n  store: any\n  dispatch: Function\n  baseApiUrl: string\n  httpFn: Function\n  middleware: IMiddleware\n  reducer: string\n  defaultState: any\n  other: IOtherProps\n  reduxKey: string\n  actions: IReduxActions\n  endpoint: string\n  key: string\n  apiMethod: IHttpMethods\n  onSuccess: Function\n  state: any\n  validateHttpResponse: Function\n  onError: any\n\n  /** Generate dynamic action with combination of different situation. */\n  generateActions(ac: string, reducer: string) {\n    this.actions = {\n      default: `${reducer}_default_` + ac,\n      start: `${reducer}_START_` + ac,\n      success: `${reducer}_SUCCESS_` + ac,\n      update: `${reducer}_UPDATE_` + ac,\n      delete: `${reducer}_DELETE_` + ac,\n      error: `${reducer}_ERROR_` + ac\n    }\n  }\n\n  /** Used to get current redux state from the store. */\n  getCurrentState() {\n    const state = this.store.getState()?.[this.reducer]?.[this.reduxKey]\n\n    if (state) {\n      return JSON.parse(JSON.stringify(state))\n    }\n\n    return state\n  }\n\n  constructor({\n    endpoint,\n    reduxKey,\n    action,\n    key,\n    method,\n    onSuccess,\n    onError,\n    store,\n    dispatch,\n    baseApiUrl,\n    httpFn,\n    defaultState,\n    middleware,\n    reducer,\n    validateHttpResponse\n  }: IApiInstance) {\n    this.store = store\n    this.dispatch = dispatch\n    this.baseApiUrl = baseApiUrl\n    this.httpFn = httpFn\n    this.defaultState = defaultState\n    this.middleware = middleware\n    this.reducer = reducer\n    this.generateActions(action, reducer)\n    this.reduxKey = reduxKey\n    this.endpoint = endpoint\n    this.key = key\n    this.apiMethod = method || 'GET'\n    this.onSuccess = onSuccess\n    this.onError = onError\n    this.validateHttpResponse = validateHttpResponse\n  }\n\n  dispatchErrorEvent(response: any, apiState: any = {}): any {\n    let onErrorResponse = response\n    if (typeof this.onError === 'function') {\n      const cbPayload = this.onError(response, apiState)\n      if (cbPayload !== undefined) {\n        onErrorResponse = cbPayload\n      }\n    }\n\n    onErrorResponse = {\n      loading: false,\n      error: onErrorResponse,\n      event: 'error'\n    }\n\n    if (typeof this?.middleware?.onError === 'function') {\n      const cbPayload: any = this.middleware?.onError(\n        {\n          currentState: this.getCurrentState(),\n          instance: this,\n          response: onErrorResponse,\n          event: 'error'\n        },\n        apiState\n      )\n      if (cbPayload !== undefined) {\n        onErrorResponse = cbPayload\n      }\n    }\n\n    this.dispatch({\n      type: this.actions.error,\n      key: this.reduxKey || 'unknown',\n      payload: onErrorResponse,\n      event: 'error'\n    })\n    return onErrorResponse\n  }\n\n  /** Used to fire HTTP request. */\n  call(\n    other: IOtherProps = {\n      refetch: false,\n      params: {},\n      urlParams: {},\n      headers: {}\n    }\n  ) {\n    let startActionPayload = {\n      ...this.getCurrentState(),\n      ...(!other.refetch && {\n        loading: true\n      }),\n      error: {},\n      event: 'start'\n    }\n\n    if (typeof this?.middleware?.beforeStart === 'function') {\n      startActionPayload = this.middleware.beforeStart(\n        {\n          currentState: this.getCurrentState(),\n          instance: this,\n          params: other.params,\n          urlParams: other.urlParams,\n          event: 'start'\n        },\n        other\n      )\n    }\n\n    this.dispatch({\n      type: this.actions.start,\n      key: this.reduxKey || '',\n      payload: startActionPayload,\n      event: 'start'\n    })\n\n    try {\n      const apiState = {\n        endpoint: generateDynamicEndpoint(\n          getMergedEndpoint(this.baseApiUrl, this.endpoint),\n          other.urlParams || {}\n        ),\n        method: this.apiMethod,\n        headers: other.headers,\n        ...(other.params && {\n          params: other.params\n        })\n      }\n\n      const apiPromise = makeHttpCall(this, apiState)\n\n      apiPromise\n        .then(async ({ data: response, status = 200 }: any) => {\n          let isValidResponse = true\n          if (this.validateHttpResponse) {\n            const cbValidateResponse = this.validateHttpResponse(response)\n            if (!cbValidateResponse) {\n              isValidResponse = false\n            }\n          } else if (status > 299) {\n            isValidResponse = false\n            return response\n          }\n\n          if (!isValidResponse) {\n            return this.dispatchErrorEvent(response, other)\n          }\n\n          if (typeof this.onSuccess === 'function') {\n            const onSuccessResult = this.onSuccess(response, {\n              ...apiState,\n              ...other\n            })\n            if (onSuccessResult !== undefined) {\n              response = onSuccessResult\n            }\n          }\n\n          let newPayload = {\n            ...this.getCurrentState(),\n            loading: false,\n            data: response,\n            event: 'success'\n          }\n\n          if (typeof this?.middleware?.afterSuccess === 'function') {\n            const cbPayload = this.middleware?.afterSuccess(\n              {\n                currentState: this.getCurrentState(),\n                instance: this,\n                response: response,\n                event: 'success'\n              },\n              {\n                ...apiState,\n                ...other\n              }\n            )\n            if (cbPayload !== undefined) {\n              newPayload = cbPayload\n            }\n          }\n\n          this.dispatch({\n            type: this.actions.success,\n            key: this.reduxKey || 'unknown',\n            payload: newPayload,\n            event: 'success'\n          })\n          return response\n        })\n        .catch((error: any) => {\n          return this.dispatchErrorEvent(error, {\n            ...other,\n            ...apiState\n          })\n        })\n    } catch (error) {\n      return this.dispatchErrorEvent(error, {\n        ...other\n      })\n    }\n  }\n\n  /** Used to refetch data without making loading flags to true. */\n  refetchAction(other = {}) {\n    this.call({ ...other, refetch: true })\n  }\n}\n\n/** Used to extract value from the object or array or any complex variable\n * path can be 'id' or 'parent.child.sub-child' or 'parent[0].child.sub-child'\n */\nconst getValueFromPath = (data: any, path: string): string | undefined => {\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  var a = path.split('.')\n  for (var i = 0, n = a.length; i < n; ++i) {\n    var k = a[i]\n    if (k in data) {\n      data = data[k]\n    } else {\n      return undefined\n    }\n  }\n  return data\n}\n\nconst setValueFromPath = (data: any, path: string, value: any) => {\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n\n  var a = path.split('.')\n  var o = data\n  while (a.length - 1) {\n    var n: any = a.shift()\n    if (!(n in o)) o[n] = {}\n    o = o[n]\n  }\n  o[a[0]] = value\n}\n\n/** It merges the baseApiUrl with current endpoint path */\nconst getMergedEndpoint = (baseApiUrl: string, endpoint: string) => {\n  if (!baseApiUrl) return endpoint\n\n  if (endpoint[0] === '/') {\n    return baseApiUrl + endpoint\n  }\n\n  return endpoint\n}\n\n/**\n *\n * @param {Array} arr\n * @param {Array} deleteArr\n * @param {Object} options\n * @returns will remove record from the arr based on values of deleteArr based on key or callback passed in options\n */\nconst removeRecordsFromArray = (\n  arr: any = [],\n  deleteArr: any,\n  options: { key?: string; callback: Function }\n) => {\n  const { key = '', callback } = options\n  const deletedFullArray: any = []\n\n  arr = arr.filter((item: any) => {\n    const id = callback ? callback(item) : item[key]\n    if (deleteArr.includes(id)) {\n      deletedFullArray.push(item)\n      return false\n    } else {\n      return true\n    }\n  })\n\n  return {\n    result: arr,\n    deleted: deletedFullArray.length,\n    deletedItems: deletedFullArray\n  }\n}\n\n/**\n *\n * @param {Array} array\n * @param {Object} options\n * @returns used to removing duplicate items from array based on key or callback passed in options,\n */\nconst removeDuplicateFromArray = (\n  array: Array<object>,\n  options: { key?: string; callback?: Function; excludeSecond?: Boolean }\n) => {\n  const { key, callback, excludeSecond = false } = options\n  const newList = {}\n  let duplicates = 0\n\n  array.forEach((item) => {\n    let id = callback ? callback(item) : key ? item[key] : ''\n    id = id + 'p'\n    if (newList[id]) {\n      duplicates++\n      if (excludeSecond === false) {\n        newList[id] = item\n      }\n    } else {\n      newList[id] = item\n    }\n  })\n\n  return { result: Object.values(newList || {}), duplicates: duplicates }\n}\n\n/** It contain all the feature from API_INSTANCE with additional method to delete and update records from the list in redux. */\nclass LISTING_API_INSTANCE extends API_INSTANCE {\n  listPath: string\n\n  constructor(data: IApiListInstance) {\n    super(data)\n    this.listPath = data.listPath\n  }\n\n  updateAction(data: Array<any> | any) {\n    try {\n      let state = this.getCurrentState()\n\n      let listFromPath: any = []\n      if (this.listPath) {\n        const pathValue = getValueFromPath(state, this.listPath)\n        if (!listFromPath) {\n          listFromPath = []\n        } else if (!Array.isArray(pathValue)) {\n          throw new Error('listPath should be path to array state')\n        } else {\n          listFromPath = pathValue\n        }\n      } else if (!Array.isArray(state.data)) {\n        throw new Error(\n          'data should be array state. if your list is not in data state then you need to pass listPath in instance'\n        )\n      }\n\n      const list = [\n        ...(this.listPath ? getValueFromPath(state, this.listPath) : state.data)\n      ]\n\n      const result = removeDuplicateFromArray(\n        [...list, ...(Array.isArray(data) ? data : [data])],\n        {\n          key: this.key\n        }\n      )\n\n      if (typeof this?.middleware?.afterUpdate === 'function') {\n        state = this.middleware.afterUpdate({\n          currentState: this.getCurrentState(),\n          instance: this,\n          updateData: result\n        })\n      } else if (this.listPath) {\n        setValueFromPath(\n          state,\n          this.listPath,\n          Object.values(result.result || {})\n        )\n      } else {\n        state.data = Object.values(result.result || {})\n      }\n\n      this.dispatch({\n        type: this.actions.update,\n        key: this.reduxKey,\n        payload: {\n          ...this.getCurrentState(),\n          ...state,\n          event: 'update'\n        },\n        event: 'update'\n      })\n    } catch (error) {\n      showErrorMessage(error)\n    }\n  }\n\n  deleteAction(id: string[] | string | number) {\n    try {\n      let state = this.getCurrentState()\n\n      let listFromPath: any = []\n      if (this.listPath) {\n        const pathValue = getValueFromPath(state, this.listPath)\n        if (!listFromPath) {\n          listFromPath = []\n        } else if (!Array.isArray(pathValue)) {\n          throw new Error('listPath should be path to array state')\n        } else {\n          listFromPath = pathValue\n        }\n      } else if (!Array.isArray(state.data)) {\n        throw new Error(\n          'data should be array state. if your list is not in data state then you need to pass listPath in instance'\n        )\n      }\n\n      const list = [\n        ...(this.listPath ? getValueFromPath(state, this.listPath) : state.data)\n      ]\n\n      const deleteData = removeRecordsFromArray(\n        list,\n        Array.isArray(id) ? id : [id],\n        {\n          callback: (i: any) => getValueFromPath(i, this.key || '')\n        }\n      )\n\n      if (typeof this?.middleware?.afterDelete === 'function') {\n        state = this.middleware.afterDelete({\n          currentState: this.getCurrentState(),\n          instance: this,\n          deleteData: deleteData\n        })\n      } else if (this.listPath) {\n        setValueFromPath(state, this.listPath, deleteData.result)\n      } else {\n        state.data = deleteData.result\n      }\n\n      this.dispatch({\n        type: this.actions.delete,\n        key: this.reduxKey,\n        payload: {\n          ...this.getCurrentState(),\n          ...state,\n          event: 'delete'\n        },\n        event: 'delete'\n      })\n    } catch (error) {\n      showErrorMessage(error)\n    }\n  }\n}\n\nconst showErrorMessage = (message: Error) => {\n  console.log(\n    `%c ${message.message} `,\n    ' font-size: 12px; color: #bada55; background: #222;',\n    message\n  )\n}\n\n/** This method is used to register dynamic action which is being call from all the instances. */\nconst bindReducer = (\n  reducer: (state: any, action: 'string', ...other: any[]) => {},\n  config: { key: '' }\n): any => {\n  const path = config.key + '_'\n\n  return (state: any, action: any, ...other: any) => {\n    if (action.type.includes(path)) {\n      return {\n        ...state,\n        [action.key]: {\n          ...(action.payload || {}),\n          ...(action.event && {\n            event: action.event\n          })\n        }\n      }\n    } else {\n      return reducer(state, action, ...other)\n    }\n  }\n}\n\n/** Used to get current state of the HTTP request where detail will be store */\nconst useInstance = (instance: IApiInstance): any => {\n  const currentState = useSelector(\n    (state: any) => state?.[instance.reducer]?.[instance.reduxKey]\n  )\n\n  const memoedState = useMemo(() => {\n    let state = currentState || instance.defaultState\n    state = JSON.parse(JSON.stringify(state))\n    return state\n  }, [currentState])\n\n  return memoedState\n}\n\n// ## useInstance\n\n// use useInstance hook which help you get easily fetch state of current HTTP request. you don't have to make any configuation.\n\n// ```\n// const reduxState = useInstance(httpInstance);\n// ```\n// reduxState contain value of given(httpInstance) instance state from the redux.\n\ninterface IAIEvents {\n  onStart?: Function\n  onSuccess?: Function\n  onError?: Function\n  onUpdate?: Function\n  onDelete?: Function\n}\n\nconst useAIEventHandler = (instance: IApiInstance, events: IAIEvents) => {\n  const isComponentLoaded = useRef(false)\n\n  // const\n  const state = useInstance(instance)\n\n  useEffect(() => {\n    if (isComponentLoaded.current) {\n      if (state.loading === true && state.event === 'start') {\n        events.onStart && events.onStart(state)\n      }\n      if (state.loading === false && state.data && state.event === 'success') {\n        events.onSuccess && events.onSuccess(state)\n      }\n      if (state.loading === false && state.error && state.event === 'error') {\n        events.onError && events.onError(state)\n      }\n      if (state.loading === false && state.event === 'update') {\n        events.onUpdate && events.onUpdate(state)\n      }\n      if (state.loading === false && state.event === 'delete') {\n        events.onUpdate && events.onUpdate(state)\n      }\n    }\n    if (!isComponentLoaded.current) {\n      isComponentLoaded.current = true\n    }\n  }, [state])\n\n  return null\n}\n\nexport {\n  CreateBase,\n  API_INSTANCE,\n  generateDynamicEndpoint,\n  removeRecordsFromArray,\n  removeDuplicateFromArray,\n  bindReducer,\n  useInstance,\n  useAIEventHandler\n}\n\n// let state = AI_getCompanyList.store.getState()?.[AI_getCompanyList.reducer]?.[AI_getCompanyList.reduxKey]\n\n// const removeDuplicateFromArray = (array, options) => {\n//   const { key, callback, excludeSecond = false } = options\n//   const newList = {}\n//   let duplicates = 0\n\n//   array.forEach(item => {\n//     let id = callback ? callback(item) : key ? item[key] : \"\"\n//     id = id + \"p\"\n//     if (newList[id]) {\n//       duplicates++\n//       if (excludeSecond === false) {\n//         newList[id] = item\n//       }\n//     } else {\n//       newList[id] = item\n//     }\n//   })\n\n//   return { result: Object.values(newList || {}), duplicates: duplicates }\n// }\n\n// const getValueFromPath = (data, path) => {\n//   path = path.replace(/\\[(\\w+)\\]/g, \".$1\") // convert indexes to properties\n//   path = path.replace(/^\\./, \"\") // strip a leading dot\n//   var a = path.split(\".\")\n//   for (var i = 0, n = a.length; i < n; ++i) {\n//     var k = a[i]\n//     if (k in data) {\n//       data = data[k]\n//     } else {\n//       return \"\"\n//     }\n//   }\n//   return data\n// }\n\n// const setValueFromPath = (data, path, value) => {\n//   path = path.replace(/\\[(\\w+)\\]/g, \".$1\") // convert indexes to properties\n//   path = path.replace(/^\\./, \"\") // strip a leading dot\n\n//   var a = path.split(\".\")\n//   var o = data\n//   while (a.length - 1) {\n//     var n = a.shift()\n//     if (!(n in o)) o[n] = {}\n//     o = o[n]\n//   }\n//   o[a[0]] = value\n// }\n\n// let listPath = \"data.rows\"\n\n// let list = getValueFromPath(AI_getCompanyList.getCurrentState(), listPath)\n\n// let data = {\n//     \"location_name\": [\n//         \"asdfas1sdf\"\n//     ],\n//     \"id\": 2356,\n//     \"company_name\": \"asdfasdf\",\n//     \"updatedAt\": \"2023-05-01T09:50:36.147Z\",\n//     \"createdAt\": \"2023-05-01T09:50:36.147Z\"\n// }\n\n// const result = removeDuplicateFromArray(\n//   [...list, ...(Array.isArray(data) ? data : [data])],\n//   {\n//     key: \"id\"\n//   }\n// )\n\n// setValueFromPath(\n//   state,\n//   listPath,\n//   Object.values(result.result || {})\n// )\n"],"names":["generateDynamicEndpoint","url","variables","Object","keys","map","i","replace","defaultHttpFn","endpoint","method","params","headers","other","parseMethod","toLowerCase","urlParams","URLSearchParams","toString","window","fetch","body","then","res","json","data","status","makeHttpCall","context","httpFn","CreateBase","store","baseApiUrl","middleware","reducer","defaultState","validateHttpResponse","dispatch","createInstance","API_INSTANCE","createListInstance","LISTING_API_INSTANCE","listPath","reduxKey","action","key","onSuccess","onError","generateActions","apiMethod","ac","actions","start","success","update","error","getCurrentState","state","getState","JSON","parse","stringify","dispatchErrorEvent","response","apiState","onErrorResponse","cbPayload","undefined","loading","event","currentState","instance","type","payload","call","refetch","startActionPayload","beforeStart","getMergedEndpoint","apiPromise","isValidResponse","cbValidateResponse","onSuccessResult","newPayload","afterSuccess","refetchAction","getValueFromPath","path","a","split","n","length","k","setValueFromPath","value","o","shift","removeRecordsFromArray","arr","deleteArr","options","callback","deletedFullArray","filter","item","id","includes","push","result","deleted","deletedItems","removeDuplicateFromArray","array","excludeSecond","newList","duplicates","forEach","values","updateAction","listFromPath","pathValue","Array","isArray","Error","list","afterUpdate","updateData","showErrorMessage","deleteAction","deleteData","afterDelete","message","console","log","bindReducer","config","useInstance","useSelector","memoedState","useMemo","useAIEventHandler","events","isComponentLoaded","useRef","useEffect","current","onStart","onUpdate"],"mappings":"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"}